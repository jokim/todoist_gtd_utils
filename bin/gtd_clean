#!/bin/env python
# -*- encoding: utf-8 -*-

import argparse
from todoist_gtd_utils import utils, TodoistGTD

def remove_labels_in_someday(api):
    print "Remove labels in Someday/Maybe..."
    ignore_labels = api.config.get_commalist('cleanup', 'ignore-labels')
    ignore_l_ids = set(api.get_label_id(l)['id'] for l in ignore_labels)

    proj = api.get_projects_by_name("Someday Maybe")
    child_pr = list(api.get_child_projects(proj))
    child_pr_ids = set(p['id'] for p in child_pr)

    items = api.items.all(lambda x: x['project_id'] in child_pr_ids)

    for i in items:
        labels_to_remove = set(i['labels']) - ignore_l_ids
        if labels_to_remove:
            print u"\nItem: {}".format(i)
            if utils.ask_confirmation(u"Ok to remove labels: {}?".format(', '.join(
                                api.get_label_humanname(labels_to_remove)))):
                # TODO: add support for editing the labels and not just y/n
                remaining_l = set(i['labels']) - labels_to_remove
                for l in labels_to_remove:
                    api.notes.add(i['id'],
                                  "gtd_utils:removed_label:{}".format(l))
                ret = i.update(labels=list(remaining_l))
        api.commit()
    print "Done removing labels in Someday/Maybe"

if __name__ == '__main__':
    p = utils.get_argparser(description="Clean up in Todoist, for GTD setup")
    args = p.parse_args()
    api = TodoistGTD(configfiles=args.configfile, token=args.token)

    remove_labels_in_someday(api)
